worker:
  image: me/myapp
  command: celery worker
  mem_limit: 67108864b
  environment:
    - AWS_ACCESS_KEY_ID=AAAAAAAAAAAAAAAAAAAA
    - AWS_SECRET_ACCESS_KEY=1111111111111111111111111111111111111111
    - AWS_EC2_REGION=us-east-1
    - BROKER_URL=redis://redis:6379/0
    - DB_HOST=db
    - DB_NAME=postgres
    - DB_PAS=po$$tgres
    - DB_USER=postgres
  links:
  - db
  - redis
  - web
db:
  image: postgres:9.3
  mem_limit: 2g
redis:
  image: redis:latest
  mem_limit: 64m
web:
  build: .
  command: uwsgi --json uwsgi.json
  mem_limit: 65536k
  environment:
    AWS_ACCESS_KEY_ID:  AAAAAAAAAAAAAAAAAAAA
    AWS_SECRET_ACCESS_KEY: 1111111111111111111111111111111111111111
    AWS_EC2_REGION: us-east-1
    BROKER_URL: redis://redis:6379/0
    DB_HOST: db
    DB_NAME: postgres
    DB_PASS: postgres
    DB_USER: postgres
  links:
  - db
  - redis
  ports:
  - 53/udp
  - 8000
  - 8000:8000
  - 127.0.0.1:8001:8001
  - 8002:192.168.59.103:8002
  - 127.0.0.1:8003:192.168.59.103:8003
web2:
  image: me/myapp
  mem_limit: 1024b
  entrypoint: uwsgi
  command: --json uwsgi.json
  cpu_shares: 200
logs:
  image: me/mylogs
  mem_limit: 1024b
  volumes_from:
  - web
  - web2
  volumes:
    - '/var/log/supervisor/:/var/log/supervisor'
    - '/var/log/nginx/:/var/log/nginx/:ro'
    - '/var/log/apache/:ro'
    - '/var/log/syslog/'
    - '/should:/be:/ommitted'
web3:
  image: me/myapp
  mem_limit: 1024
  entrypoint: uwsgi
  command: --json uwsgi.json
  cpu_shares: 200
web4:
  image: me/myapp
  mem_limit: 1024
  entrypoint: uwsgi
  command: --json uwsgi.json
  cpu_shares: 200
  volumes_from:
    - web3:ro
    - logs:rw
dummy:
  image: me/myapp
  entrypoint: ["noop", "param0"]
  command: ["param2", "param1"]
